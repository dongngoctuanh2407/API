@model ChungTuEditViewModel
@{
    var isNew = Model.Id == Guid.Empty;
}
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.Id_PhongBan)
@Html.HiddenFor(x => x.Id_PhongBanDich)
@Html.HiddenFor(x => x.iLoai)
@*@Html.ValidationSummary()*@
@if (isNew)
{
    <div class="form-group">
        <div class="col-sm-2">
            <label class="control-label-r">Phòng ban đề nghị</label>
            @Helpers.Required()
        </div>
        <div class="col-sm-4">
            <input type="text" readonly value="@PhienLamViec.sTenPhongBanFull" class="form-control" />
        </div>
        @*@if (PhienLamViec.iID_MaPhongBan != "02" && PhienLamViec.iID_MaPhongBan != "11")
            {
                <div class="col-sm-4">
                    <input type="text" readonly value="@PhienLamViec.sTenPhongBanFull" class="form-control" />
                </div>
            }
            else
            {
                <div class="col-sm-4">
                    @Html.DropDownListFor(x => x.Id_PhongBanDich, Model.PhongBanList, null, new { @class = "form-control", onchange = "changePhongBan()" })
                    @Html.ValidationMessageFor(x => x.Id_PhongBanDich)
                </div>
            }*@
    </div>
    <div class="form-group">
        @*Theo don vi*@
        @if (Model.iLoai == 1)
        {
            <div class="col-sm-2">
                @Html.LabelFor(x => x.TenDonVi, new { @class = "control-label-r" })
                @Helpers.Required()
            </div>
            <div class="col-sm-4">
                @if (Model.DonViList == null)
                {
                    @*@Html.HiddenFor(x => x.Id_DonVi)*@
                    @*@Html.TextBoxFor(x => x.TenDonVi, new { @class = "form-control", @readonly = true })*@

                    <select id="Id_DonVi" name="Id_DonVi" class="form-control"></select>
                }
                else
                {
                    @Html.DropDownListFor(x => x.Id_DonVi, Model.DonViList, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.Id_DonVi)
                }
            </div>
        }
        @*Theo nganh*@
        else
        {

            <div class="col-sm-2">
                <label class="control-label-r">Ngành</label>
                @Helpers.Required()
            </div>
            <div class="col-sm-4">
                <select id="Id_DonVi" name="Id_DonVi" class="form-control"></select>
            </div>

        }
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            <label class="control-label-r">Lần nhập dữ liệu:</label>
            @Helpers.Required()
        </div>
        <div class="col-sm-4">
            @Html.DropDownListFor(x => x.iRequest, Model.RequestList, null, new { @class = "form-control" })
            @Html.ValidationMessageFor(m => m.iRequest)
        </div>
    </div>
}
else
{

    <div class="form-group">
        @*Theo don vi*@
        @if (Model.iLoai == 1)
        {
            <div class="col-sm-2">
                @Html.LabelFor(x => x.TenDonVi, new { @class = "control-label-r" })
                @Helpers.Required()
            </div>
            <div class="col-sm-4">
                @Html.HiddenFor(x => x.Id_DonVi)
                @Html.TextBoxFor(x => x.TenDonVi, new { @class = "form-control", @readonly = true })
            </div>
        }
        @*Theo nganh*@
        else
        {

            <div class="col-sm-2">
                <label class="control-label-r">Ngành</label>
                @*@Html.LabelFor(x => x.TenDonVi, new { @class = "control-label" })*@
                @Helpers.Required()
            </div>
            <div class="col-sm-4">
                @Html.HiddenFor(x => x.Id_DonVi)
                @Html.TextBoxFor(x => x.TenDonVi, new { @class = "form-control", @readonly = true })
            </div>
        }
    </div>
    <div class="form-group">
        <div class="col-sm-2">
            <label class="control-label-r">Phòng đề nghị</label>
            @Helpers.Required()
        </div>
        <div class="col-sm-4">
            @Html.HiddenFor(x => x.iRequest)
            @Html.TextBoxFor(x => x.Request, new { @class = "form-control", @readonly = true })
        </div>
    </div>
}
<div class="form-group">
    <div class="col-xs-4 col-sm-2">
        @Html.LabelFor(x => x.NgayChungTu, new { @class = "control-label-r" })
        @*@Html.ValidationMessageFor(m => m.dNgayChungTu)*@
        @Helpers.Required()
    </div>
    <div class="col-xs-8 col-sm-4">
        @Html.TextBoxFor(x => x.NgayChungTu, "{0:dd/MM/yyyy}", new { @class = "form-control date", format = "dd/mm/yyyy" })
    </div>
</div>
<div class="form-group">
    <div class="col-xs-4  col-sm-2">
        @Html.LabelFor(x => x.NoiDung, new { @class = "control-label-r" })
    </div>
    <div class="col-xs-8 col-sm-10">
        @Html.TextAreaFor(x => x.NoiDung, new { @class = "form-control" })
    </div>
</div>
@using (Html.BeginScripts())
{
    <script src="~/Scripts/js/js_report.js"></script>
    <script>

        var loai = '@Model.iLoai';
        loadNganh(loai);

        function loadNganh(loai, id_phongban) {
            if (loai != 2)
                return;

            var url = '@Url.Action("Ds_Nganh")' +
                "/?id_phongban_dich=" + id_phongban;
            $.getJSON(url, function (data) {

                console.log(data);
                $("#Id_DonVi").append(data);
            });

        }

        function changePhongBan() {
            var Id_PhongBanDich = $("#Id_PhongBanDich").val();
            if (loai == 1) {
                fillDonVi(Id_PhongBanDich);
            } else {
                loadNganh(loai, Id_PhongBanDich);
            }
        }

        function fillDonVi(Id_PhongBanDich) {
            var url = '@Url.Action("Ds_DonVi")' + "/?"
                + "Id_PhongBanDich=" + Id_PhongBanDich;

            console.log(url);

            $.getJSON(url, function (data) {
                document.getElementById("Id_DonVi").innerHTML = data;
            });
        }
    </script>

}
