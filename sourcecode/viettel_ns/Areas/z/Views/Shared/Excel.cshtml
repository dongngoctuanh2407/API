
@using System.Web.Mvc.Html
@model ChungTuViewModel_QuyetToan
@{
    ViewBag.Title = "Nhận dữ liệu quyết toán";
}
@section Styles{
    @*@Html.Partial("_StyleSheets.Editor")*@


    <style>
        .swal2-content #swal2-content {
            background-color: #FEFAE3;
            padding: 17px;
            border: 1px solid #F0E1A1;
            display: block;
            margin: 22px;
            text-align: left;
            color: #61534e;
        }
    </style>

}
<div class="container">
    <div class="panel panel-danger">
        <div class="panel-heading">
            @ViewBag.Title.ToUpper()
        </div>
        <div class="panel-body">
            @using (Html.BeginForm("excel", "qt", FormMethod.Post, new { area = "z", id = "my_form", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.iID_MaChungTu)
                @Html.HiddenFor(x => x.iLoai)



                <div class="form-group">
                    <div class="col-xs-4 col-sm-2">
                        @Html.LabelFor(x => x.iThang_Quy, new { @class = "control-label-r" })
                        @Helpers.Required()
                    </div>
                    <div class="col-xs-4 col-sm-4">
                        @Html.TextBoxFor(x => x.iThang_Quy, new { @class = "form-control", @readonly = true })
                    </div>

                    <div class="col-sm-2">
                        @Html.LabelFor(x => x.sTenDonVi, new { @class = "control-label-r" })
                        @Helpers.Required()
                    </div>
                    <div class="col-sm-4">
                        @Html.HiddenFor(x => x.iID_MaDonVi)
                        @Html.TextBoxFor(x => x.sTenDonVi, new { @class = "form-control", @readonly = true })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-sm-2">
                        @Html.LabelFor(x => x.sDSLNS, new { @class = "control-label-r" })
                    </div>
                    <div class="col-sm-4">
                        @Html.TextBoxFor(x => x.sDSLNS, new { @class = "form-control", @readonly = true })
                    </div>
                    <div class="col-xs-4 col-sm-2">
                        @Html.LabelFor(x => x.dNgayChungTu, new { @class = "control-label-r" })
                        @Helpers.Required()
                    </div>
                    <div class="col-xs-4 col-sm-4">
                        <input readonly="true" class="form-control" value="@Model.dNgayChungTu.ToString("dd/MM/yyyy")" />
                        @*@Html.TextBoxFor(x => x.dNgayChungTu, "{0:dd/MM/yyyy}", new {@class = "form-control", format = "dd/mm/yyyy", @readonly = true})*@
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-xs-4  col-sm-2">
                        @Html.LabelFor(x => x.sNoiDung, new { @class = "control-label-r" })
                    </div>
                    <div class="col-xs-8 col-sm-10">
                        @Html.TextAreaFor(x => x.sNoiDung, new { @class = "form-control", @readonly = true })
                    </div>
                </div>
                <hr />


                @*chon file excel *@
                <div class="form-group">
                    <div class="col-sm-2">
                        <label class="control-label-r">1. Chọn file excel:</label>
                    </div>
                    <div class="col-sm-10">
                        <input type="file" id="FileUpload" name="FileUpload" />
                    </div>


                </div>
                <div class="form-group">
                    <div class="col-sm-2">
                        <label class="control-label-r">2. Chọn dữ liệu:</label>
                    </div>
                    <div class="col-sm-10">

                        @Html.DropDownListFor(x => x.File_List, Model.FileList, null, new { id = "file_list", @class = "form-control", onchange = "change_file()" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-sm-2">
                    </div>
                    <div class="col-sm-10">
                        <div id="div_file"></div>
                    </div>
                </div>

                <hr />

                <div class="form-group">

                    <div class="col-sm-offset-2 col-sm-10">
                        <a href="@Url.Action("Index")" class="btn btn-mvc"><i class="fa fa-chevron-left"></i>    @L("Buttons.Back")</a>
                        |
                        @*<a type="submit" id="btn-submit" class="btn btn-mvc btn-mvc-green"></a>*@
                        <button type="button" class="btn btn-mvc btn-mvc-green btn_save"><i class="fa fa-database"></i>    Lấy số liệu</button>
                        |
                        <a href="@Url.Action("Index", new {Model.iID_MaChungTu, controller = "QuyetToan_ChungTuChiTiet", area = ""})" class="btn btn-mvc btn-mvc-blue">Nhập số liệu</a>
                    </div>
                </div>
            }
            @*</form>*@
        </div>
    </div>

</div>


@section Scripts{
}


@using (Html.BeginScripts())
{
    @*@Html.Partial("_JavaScript.Editor")*@


    <script>



        $(".btn_save").click(function () {

            var has_file = $("#FileUpload").val() != '';
            if (!has_file) {

                // kiem tra neu chon file data
                if ($("#file_data").length > 0 && $("#file_data input[type='radio']:checked").val() != "") {

                    excel_data();
                }
                else {
                    swal("Chưa đính kèm file excel", "Đ/c cần chọn file excel hoặc chọn nhận từ csdl!", "info");
                }


            } else {
                excel_file();

            }
        });


        // kiem tra du lieu file excel
        function excel_file() {
            var token = $('input[name="__RequestVerificationToken"]').val();

            // kiem tra file du lieu truoc khi luu
            var fileInput = document.getElementById('FileUpload');
            var file = fileInput.files[0];
            //var file = $("#FileUpload").val();

            var formData = new FormData();
            formData.append('file', file);
            formData.append('id_chungtu', $("#iID_MaChungTu").val());
            formData.append('__RequestVerificationToken', token);

            var url = '@Url.Action("excel_check")';

            $.ajax({
                type: "POST",
                url: url,
                //data: {
                //    id_chungtu: $("#iID_MaChungTu").val(),
                //    file: file,
                //    __RequestVerificationToken: token,
                //},
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                async: false,
                success: function (data) {

                    JSON.stringify(data);

                    if (data.count == 0) {
                        swal({
                            title: 'Dữ liệu trống!',
                            html: data.msg,
                            width: '900px',
                            type: 'warning',
                            //timer: 1500
                        }).then((r) => {
                        });

                        //swal(
                        //  'Dữ liệu trống!',
                        //  data.msg,
                        //  'warning',
                        //    timer: 1500
                        //  );
                    }
                    else {

                        swal({
                            title: 'Nhận số liệu quyết toán?',
                            html: data.msg + '<br>Bạn chắc chắn muốn lấy số liệu quyết toán. Hệ thống sẽ tự động xoá toàn bộ số liệu đang có của chứng từ và đẩy số liệu nhận vào!',
                            //text: 'Bạn muốn xóa chứng từ!',
                            //html: true,
                            width: '900px',
                            type: 'question',
                            showCancelButton: true,
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Đồng ý nhận!',
                            cancelButtonText: 'Hủy',
                        }).then((r) => {

                            if (r.value) {

                                //var id = $(this).data("id");
                                //deleteChungTu(id);

                                $("#my_form").submit(); // Submit the form
                                swal("Thành công", "Nhận số liệu thành công, đ/c cần kiểm tra lại để đảm bảo đầy đủ, chính xác!", "info");
                            }

                        });
                    }
                },
            });
        }

        function excel_data() {

            var z_file = $("#file_data input[type='radio']:checked").val();
            var file_name = $("#file_list").val();

            var url = '@Url.Action("excel_check_file")';
            var token = $('input[name="__RequestVerificationToken"]').val();
            var id_chungtu = $("#iID_MaChungTu").val();

            var formData = new FormData();
            formData.append('file_name', file_name);
            formData.append('z_file', z_file);
            formData.append('id_chungtu', id_chungtu);
            formData.append('__RequestVerificationToken', token);

            $.ajax({
                type: "POST",
                url: url,
                //data: {
                //    __RequestVerificationToken: token,
                //    id_chungtu: $("#iID_MaChungTu").val(),
                //    file_name,
                //    z_file,
                //    }
                //,
                data: formData,
                contentType: false,
                processData: false,
                cache: false,
                async: false,
                success: function (data) {

                    JSON.stringify(data);

                    if (data.count == 0) {
                        swal({
                            title: 'Dữ liệu trống!',
                            html: data.msg,
                            width: '900px',
                            type: 'warning',
                            //timer: 1500
                        }).then((r) => {
                        });

                        //swal(
                        //  'Dữ liệu trống!',
                        //  data.msg,
                        //  'warning',
                        //    timer: 1500
                        //  );
                    }
                    else {

                        swal({
                            title: 'Nhận số liệu quyết toán?',
                            html: data.msg + '<br>Bạn chắc chắn muốn lấy số liệu quyết toán. Hệ thống sẽ tự động xoá toàn bộ số liệu đang có của chứng từ và đẩy số liệu nhận vào!',
                            //text: 'Bạn muốn xóa chứng từ!',
                            //html: true,
                            width: '900px',
                            type: 'question',
                            showCancelButton: true,
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Đồng ý nhận!',
                            cancelButtonText: 'Hủy',
                        }).then((r) => {

                            if (r.value) {

                                //var id = $(this).data("id");
                                //deleteChungTu(id);

                                $("#my_form").submit(); // Submit the form
                                swal("Thành công", "Nhận số liệu thành công, đ/c cần kiểm tra lại để đảm bảo đầy đủ, chính xác!", "info");


                                //// xac nhan in thong tri de kiem tra
                                //swal({
                                //    title: "Nhận dữ liệu thành công!",
                                //    html: "Nhận số liệu thành công, đ/c cần kiểm tra lại để đảm bảo đầy đủ, chính xác!",
                                //    type: "warning",
                                //    showCancelButton: true,
                                //    confirmButtonClass: "btn-success",
                                //    confirmButtonText: "In thông tri!",
                                //    closeOnConfirm: false
                                //},
                                //function (confirm) {
                                //    if (confirm) {
                                //        openNewTab('~/rptQuyetToan_ThongTri/?iID_MaChungTu=' + id_chungtu);
                                //    }

                                //});
                            }

                        });
                    }
                },
            });
        }

        // chọn file dữ liệu
        function change_file() {
            var file = $("#file_list").val();

            if (file == "") {
                $("#div_file").empty();
                return;
            }

            var url = '@Url.Action("excel_file_select")';
            $.ajax({
                type: "GET",
                url: url,
                data: { file },
                        success: function(data) {

                            JSON.stringify(data);
                            $("#div_file").html(data);
                },
                });

                }


        function deleteChungTu(id) {
            var url = '@Url.Action("delete", "chungtu")';
            var token = $('input[name="__RequestVerificationToken"]').val();

            $.ajax({
                type: "POST",
                url: url,
                data: {
                    id,
                        __RequestVerificationToken: token,
                    },
                        success: function(data) {

                            JSON.stringify(data);

                            if (data.success) {
                                swal({
                        title: 'Đã xóa!',
                                    text: 'Chứng từ đã được xóa thành công.',
                                    type: 'success',
                                    timer: 1500
                                })
                                    .then((r) => {
                                        location.reload();
                                    });
                            } else {
                                swal(
                                    'Xóa bị lỗi!',
                                    data.msg,
                                    'error');
                            }
                        },
            });


        };
    </script>



}




