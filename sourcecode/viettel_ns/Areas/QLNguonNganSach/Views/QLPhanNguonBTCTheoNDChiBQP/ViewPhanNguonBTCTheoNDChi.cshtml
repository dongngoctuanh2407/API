@using Viettel.Domain.DomainModel
@model NNSPhanNguonBTCTheoNDChiViewModel
@{
    ViewBag.Title = "Phần nguồn BTC theo nội dung chi BQP";
    Layout = "~/Views/Shared/_LayoutWebNew.cshtml";
}

@section Styles{
    <link rel="stylesheet" type="text/css" href="~/Content/css/DanhMuc/style.css">
}

<div class="main">
    <div class="card">
        <div class="card-body">
            <div class="form-group">
                <h6><b>Phần nguồn BTC theo nội dung chi BQP</b></h6>
                <input type="text" hidden value="@Model.iID_Nguon" id="iID_Nguon" />
                <input type="text" hidden value="@Model.iIdPhanNguon" id="iIdPhanNguon" />
            </div>
            <table class="table table-bordered" id="tblListNoiDungChiChiTiet">
                <thead>
                <th width="5%">STT</th>
                <th width="55%">Nội dung chi</th>
                <th width="20%">Số tiền</th>
                <th width="20%">Ghi chú</th>
                </thead>
                <tbody>
                    <tr>
                        <td align="center">1</td>

                        <td align="left">Vốn trong nước -- còn lại</td>

                        <td align="left">
                            <span id="id_rSoTienConLai" class="soTienChitiet">@Model.rSoTienConLai</span>
                            <input type="text" hidden value="@Model.rSoTienCoTheChi" id="rSoTienCoTheChi" />
                        </td>

                        <td align="left">
                            Còn lại
                        </td>
                    </tr>
                    @{
                        int index = 1;
                        foreach (NNSDMNoiDungChiViewModel item in Model.lstDMNoiDungChi)
                        {
                            index++;
                            <tr>
                                <td align="center">@index</td>

                                <td align="left">@item.sTenNoiDungChi</td>

                                <td align="left">
                                    <input type="text" value="@item.SoTien" id="txt_soTien" class="soTienChitiet" pattern="^\$\d{1,3}(,\d{3})*(\.\d+)?$" data-type="currency"/>
                                    <input type="text" hidden value="@item.iID_NoiDungChi" class="iIDNoiDungChi" />
                                </td>

                                <td align="left">
                                    <input type="text" style="width: 100%;" value="@item.GhiChu" id="txt_ghichu" class="ghiChuChiTiet" />
                                </td>
                            </tr>

                        }
                    }
                </tbody>
            </table>
            <div class="form-group text-right">
                <button class="btn btn-success" onclick="SaveNDChiData()">Lưu</button>
                <button class="btn btn-info" onclick="CancelSaveNDChiData('@Model.iIdPhanNguon')">Đóng</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    @Html.Partial("_SheetScript")
    <script src="~/Scripts/NguonNS/jsNguonNS_PhanNguon.js"></script>
}
<script type="text/javascript">
    $(document).ready(function () {
        $("tr").hover(function () {
            $(this).css("background-color", "#e7f8fe");
        }, function () {
            $(this).css("background-color", "");
        });
        //totalMoney();
        formatMoney();
    });

    $("input[data-type='currency']").on({
        keyup: function () {
            formatCurrency($(this));
            calSoTienConLai();
        },
        blur: function () {
            formatCurrency($(this), "blur");
            calSoTienConLai();
        }
    });


    function formatNumber(n) {
        // format number 1000000 to 1,234,567
        return n.replace(/\D/g, "").replace(/\B(?=(\d{3})+(?!\d))/g, ".")
    }


    function formatCurrency(input, blur) {
        // appends $ to value, validates decimal side
        // and puts cursor back in right position.

        // get input value
        var input_val = input.val();

        // don't validate empty input
        if (input_val === "") { return; }

        // original length
        var original_len = input_val.length;

        // initial caret position 
        var caret_pos = input.prop("selectionStart");
        
        // no decimal entered
        // add commas to number
        // remove all non-digits
        input_val = formatNumber(input_val);
        //input_val = "$" + input_val;
        input_val = input_val;

        // final formatting
        if (blur === "blur") {
            //input_val += ".00";
        }

        // send updated string to input
        input.val(input_val);

        // put caret back in the right position
        var updated_len = input_val.length;
        caret_pos = updated_len - original_len + caret_pos;
        input[0].setSelectionRange(caret_pos, caret_pos);
    }

    
</script>

